trigger:
- master

pool:
  name: Default

jobs:
  # Native + Docker runtime tests
  - job: native_basic_docker_1
    displayName: '(1.1)-(Native)-(Basic)-(Docker) GraalVM Native Image Custom Runtime compilation test'
    variables:
      WORKING_DIRECTORY: examples/bb/native/basic.example
      HL_CLJ_ALIAS: holy-lambda-local
    steps:
      - script: |
          # Regenerate partial cache
          bash -c "mkdir -p .holy-lambda && cd .holy-lambda && unzip -q ~/azure-agent/local_cache/m2-cached.zip" && bb stack:sync && \

          # Regular test tasks
          bb stack:compile && \
          bb native:executable && \
          bb stack:invoke :validation-fn "(fn [{:keys [body]}] (= body \"Hello world\"))"
        workingDirectory: ${{variables.WORKING_DIRECTORY}}
        displayName: 'Compilation + Invoke'

  # Java + Docker runtime tests
  - job: java_basic_docker_1
    displayName: '(1.2)-(Java)-(Basic)-(Docker) Java runtime test'
    variables:
      WORKING_DIRECTORY: examples/bb/java/basic.example
      HL_CLJ_ALIAS: holy-lambda-local
    steps:
      - script: |
          # Regenerate partial cache
          bash -c "mkdir -p .holy-lambda && cd .holy-lambda && unzip -q ~/azure-agent/local_cache/m2-cached.zip" && bb stack:sync && \

          # Regular test tasks
          bb stack:compile && \
          bb stack:invoke :validation-fn "(fn [{:keys [body]}] (= body \"Hello world\"))"
        workingDirectory: ${{variables.WORKING_DIRECTORY}}
        displayName: 'Compilation + Invoke'
